set nocompatible
syntax on

" Wrap gitcommit file types at the appropriate length
filetype indent plugin on

" Lots borrowed from https://github.com/mgill25/dotfiles/blob/master/vim/vimrc
set nu
set gdefault

" Hide the toobar and menubar
set guioptions-=m
set guioptions-=T
set guioptions-=r
set guioptions-=L
set wildignore=*.dll,*.o,*.pyc,*.bak,*.exe,*.jpg,*.jpeg,*.png,*.gif,*$py.class,*.class,*.zip,*.sw[op],*/node_modules,*/.git
set ignorecase 	" Ignore case when searching
set smartcase   " Ignore case when search pattern all lowercase. Case-sensitive otherwise.
" let &colorcolumn=join(range(81,999),",")
set colorcolumn=81

"Indentation Settings. Taken from the Hitchhiker's guide to Python.
set scrolloff=5
set title
set ttyfast
set expandtab 
set shiftround

" autocmd FileType python set tabstop=4 softtabstop=4 shiftwidth=4
autocmd FileType javascript set tabstop=2 softtabstop=2 shiftwidth=2
autocmd FileType javascript setlocal commentstring=//\ %s
autocmd FileType javascript noremap <buffer> <leader>b :call JsBeautify()<cr>
autocmd FileType javascript let b:javascript_fold = 0
autocmd BufNewFile,BufRead *.json setlocal ft=javascript
let javascript_enable_domhtmlcss=1
autocmd FileType html,htmldjango set tabstop=4 softtabstop=4 shiftwidth=4
autocmd FileType json setlocal expandtab shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType yaml setlocal expandtab shiftwidth=2 tabstop=8 softtabstop=2
autocmd BufNewFile,BufRead *.sls setlocal ft=yaml

" template language support (SGML / XML too)
" ------------------------------------------
" and disable that stupid html rendering (like making stuff bold etc)
autocmd FileType xml,html,htmljinja,htmldjango setlocal expandtab shiftwidth=2 tabstop=2 softtabstop=2
autocmd FileType html setlocal commentstring=<!--\ %s\ -->
autocmd FileType htmljinja setlocal commentstring={#\ %s\ #}
autocmd BufWritePre *.py :%s/\s\+$//e   " Removing Trailing Whitespace on buffer write
" assumes that files in templates are jinja (though they might be angular)
autocmd BufRead,BufNewFile **/templates/*.html set filetype=htmljinja
let html_no_rendering=1
let g:syntastic_html_checkers = []

" When loading text files, wrap them and don't split up words.
au BufNewFile,BufRead *.txt setlocal wrap 
au BufNewFile,BufRead *.txt setlocal lbr

set showcmd
set laststatus=2                " Always show the status line
set encoding=utf8
set backupdir=~/.tmp
set directory=~/.tmp " Don't clutter my dirs up with swp and tmp files

" vim-plug is the new Vundle!
call plug#begin('~/.vim/bundle')

" editor goodies
" file search
Plug 'kien/ctrlp.vim'
" cursor toggle
Plug 'jszakmeister/vim-togglecursor'
" colors and themes
Plug 'morhetz/gruvbox'
Plug 'daylerees/colour-schemes', { 'rtp': 'vim' }
Plug 'chriskempson/tomorrow-theme', { 'rtp': 'vim' }
" window management
Plug 'zhaocai/GoldenView.Vim'
" YouCompleteMe - autocomplete
Plug 'Valloric/YouCompleteMe'

" git
Plug 'tpope/vim-fugitive'

" javascript
" ref: http://oli.me.uk/2013/06/29/equipping-vim-for-javascript/
" Plug 'marijnh/tern_for_vim'
Plug 'jelera/vim-javascript-syntax'
Plug 'pangloss/vim-javascript'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'Raimondi/delimitMate'
" scss
" Plug 'cakebaker/scss-syntax.vim'
" python indentation
Plug 'hynek/vim-python-pep8-indent'
" html
" Plug 'mitsuhiko/vim-jinja'
" apiblueprint
Plug 'kylef/apiblueprint.vim'
" applescript
Plug 'vim-scripts/applescript.vim'

" code/generic
Plug 'scrooloose/syntastic'
Plug 'scrooloose/nerdcommenter'

" ack.vim - great search
Plug 'mileszs/ack.vim'
" editorconfig
Plug 'editorconfig/editorconfig-vim'

" Snippets
Plug 'SirVer/ultisnips'
" Snippets are separated from the engine. Add this if you want them:
Plug 'honza/vim-snippets'

call plug#end()

" Goldenview setup
let g:goldenview__enable_default_mapping=0
" 1. split to tiled windows
nmap <silent> <C-L>  <Plug>GoldenViewSplit

" 2. quickly switch current window with the main pane
" and toggle back
nmap <silent> <F8>   <Plug>GoldenViewSwitchMain
nmap <silent> <S-F8> <Plug>GoldenViewSwitchToggle

" 3. jump to next and previous window
nmap <silent> <C-J>  <Plug>GoldenViewNext
nmap <silent> <C-K>  <Plug>GoldenViewPrevious

" set colorscheme
colorscheme Tomorrow-Night-Eighties
set guifont=Monaco:h13

" ctrlp setup
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']

" syntastic setup
" ref: https://github.com/scrooloose/syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['eslint']

" http://stackoverflow.com/a/680271
" set clipboard=unnamed

" some copy/paste fixes
" ref: http://unix.stackexchange.com/a/199207
set pastetoggle=<F2>

" ultisnips config
" ref: https://github.com/SirVer/ultisnips
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>" 
